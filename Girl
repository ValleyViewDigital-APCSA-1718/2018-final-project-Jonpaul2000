import greenfoot.*;  // (World, Actor, GreenfootImage, Greenfoot and MouseInfo)

/**
 * Write a description of class Girl here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class Girl extends Actor implements Character
{
    /**
     * Act - do whatever the Girl wants to do. This method is called whenever
     * the 'Act' or 'Run' button gets pressed in the environment.
     */
    private String imageName;
    private int width;
    private int height;
    private double speed;
    private double ySpeed;
    private int ground;
    private int killFrame;

    public Girl(String imageName, int width, int height)
    {
        this.imageName = imageName;
        this.width = width;
        this.height = height;
        
        GreenfootImage p2 = new GreenfootImage(imageName);
        p2.scale(width, height);
        setImage(p2);
    }// end three-arg constructor
    
    public int getJumpConstant()
    {
        return -20;
    }// end method getJumpConstant
    public double getFallConstant()
    {
        return .8;
    }// end method getFallConstant
    
    public void move()
    {
        if (Greenfoot.isKeyDown("d"))
        {
            speed = 4;
            move((int)speed);
        }// end right for-loop
        else if (Greenfoot.isKeyDown("a"))
        {
            speed = -4;
            move((int)speed);
        }// end left for-loop
        if (speed > 0)
        {
            speed = speed - .1;
            move((int)speed);
        }// end right slide for-loop
        if (speed < 0)
        {
            speed = speed + .1;
            move((int)speed);
        }// end left slide for-loop
    }
    public void jump()
    {
        ground = 680 - (int)(height*1.15);      //sets the base ground collision layer
        for(int j=0; j<3; j++)                  //sets the platform collision layers
        {
            if ((getX()>=Cloud.getLayout(0, j)-150) && (getX()<=Cloud.getLayout(0, j)+150)
               && (getY() <= Cloud.getLayout(1, j)) && (ySpeed >= 0))
            {
                ground = Cloud.getLayout(1, j) - (int)(height*.5);
            }// end platform layer if
        }// end platform for-loop
        boolean onGround = ((getY() == ground));
        if (!onGround)                          //sets the methods allowed when the character is in the air
        {
            fall();
            attack();
        }// end air if
        else                                    //jump only activates if the character is on the ground
        {
            if (Greenfoot.isKeyDown("w"))
            {
                ySpeed = getJumpConstant();
                setLocation(getX(), getY()+(int)ySpeed);
            }// end jump if
        }// end air else
    }// end method jump
    public void fall()
    {
        ySpeed = ySpeed + getFallConstant();
        setLocation(getX(), getY()+(int)ySpeed);
        if (getY() >= ground)
        {
            setLocation (getX(), ground);
            ySpeed = 0;                         //ensures that the character falls and lands on the platform
        }// end fall if
    }// end mehod fall
    public void attack()                        //allows the character to inflict damage for a period of time
    {
        if (Greenfoot.isKeyDown("s"))
        {
            killFrame = 30;
            while (killFrame > 0)
            {
                if (isTouching(Guy.class))
                {
                    removeTouching(Guy.class);
                }// end kill if
                killFrame--;
            }// end kill while-loop
        }// end attack if
    }// end method attack
    public String toString()                    //debugs the code
    {
        boolean lineX = ((getX()>=Cloud.getLayout(0, 1)-150) && (getX()<=Cloud.getLayout(0, 1)+150));
        boolean lineY = (getY() <= Cloud.getLayout(1, 1) - (int)(height*1.15));
        String result = "Position: (" + getX() + ", " + getY() + ")\n";
        result += "LineX: " + lineX;
        result += "\nLineY: " + lineY;
        return result;
    }// end method toString
}// end class Girl
